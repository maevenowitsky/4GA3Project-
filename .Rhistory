getwd()
library(readxl)
read_excel("street-trees.xlsx")
knitr::opts_chunk$set(echo = TRUE)
## this is where our project starts!
library(cancensus)
options(cancensus.api_key = "CensusMapper_ff4c917e80df34b71900e0a048c999dd")
options(cancensus.cache_path = "/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
# returning census data and geography for Vancouver as an sf-class dataframe
census_data <- get_census(dataset='CA21', regions=list(PR="59"), vectors=c("v_CA21_1","v_CA21_906","v_CA21_4237","v_CA21_4917","v_CA21_434"), labels="detailed", geo_format="sf", level='CT')
View(census_data)
read.csv("data.csv")
read.csv(data.csv)
read.csv("data.csv")
read.csv(file = "data.csv")
setwd("/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
read.csv(file = "data.csv")
install.packages("readr")
install.packages("readr")
knitr::opts_chunk$set(echo = TRUE)
read.csv(file = "data.csv")
setwd("/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
read.csv(file = "data.csv")
read.csv(file, "parks.csv")
read.csv(file = "parks.csv")
knitr::opts_chunk$set(echo = TRUE)
getwd()
setwd("/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
getwd()
read.csv(file = "parks.csv")
read.csv(file = "parks.csv")
getwd()
read.csv("/Users/dainadeangelis/Desktop/4GA3Project-/Project data/parks.csv")
getwd()
setwd("/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
read.csv(file = "parks.csv")
getwd()
knitr::opts_chunk$set(echo = TRUE)
read.csv(file = "~/Project data/data.csv")
read.csv(file = "~/Project data/data.csv, stringsAsFactors = FALSE")
getwd()
read.csv(file = "~/Project data/parks.csv, stringsAsFactors = FALSE")
read.csv(file = parks.csv, stringsAsFactors = FALSE")
read.csv(file = "parks.csv", stringsAsFactors = FALSE")
read.csv(file = "parks.csv", stringsAsFactors = FALSE)
read.csv(file = "~/r_data/parks.csv", stringsAsFactors = FALSE)
read.csv(file = "~/r_data/parks.csv")
read.csv(file,  "~/r_data/parks.csv")
read.csv(file = "~/r_data/parks.csv")
read.csv(file = "parks.csv")
getwd()
setwd("/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
read.csv(file = "parks.csv")
parks <- read.csv(file = "parks.csv")
parks <- read.csv(file = "parks.csv")
parks <- read.csv(file = "parks.csv")
data(package = .packages(all.available = TRUE))
data_folder <- ("/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
read.csv("parks.csv")
knitr::opts_chunk$set(echo = TRUE)
read.csv(file = "parks.csv")
getwd()
read.csv("parks.csv")
read.csv('parks.csv')
read.csv(parks.csv)
library(readr)
read.csv(parks.csv)
library(readr)
read.csv("parks.csv")
library("readr")
read.csv("parks.csv")
library("readr")
read_csv('data.csv')
read_csv('~/Project data/data.csv')
read_csv('/Project data/data.csv')
read_csv('Project data/data.csv')
census_data <- read_csv('Project data/data.csv')
View(census_data)
parks <- read_csv('Project data/parks.csv')
View(parks)
parks <- read_csv('Project data/parks.csv', spec())
parks <- read_csv('Project data/parks.csv, spec()')
parks <- read_csv('Project data/parks.csv')
problems(parks.csv)
problems('Project data/parks.csv')
problems(parks)
parks <- read_csv('Project data/street-trees.csv')
parks <- read_csv('Project data/street-trees.csv', show_col_types = TRUE)
View(parks)
parks <- read_csv('Project data/street-trees.csv', spec(1:10))
parks <- read_csv(Project data("data.csv"))
parks <- read_csv('Project data/street-trees.csv', sep = ";")
parks <- read_csv(file = "Project data/street-trees.csv")
parks <- read_csv(file = "Project data/street-trees.csv", head = TRUE, sep = ",")
parks <- read.csv(file = "Project data/street-trees.csv", head = TRUE, sep = ",")
parks <- read.csv(file = "Project data/street-trees.csv", head = TRUE, sep = ";")
View(parks)
parks <- read.csv(file = "Project data/parks.csv", head = TRUE, sep = ";")
View(parks)
# reading csv packages
parks <- read.csv(file = "Project data/parks.csv", head = TRUE, sep = ";") # parks
census_data <- read.csv(file = "Project data/data.csv", head = TRUE, sep = ";") # can census variables
street_trees <- read.csv(file = "Project data/street-trees.csv", head = TRUE, sep = ";") # street trees
homeless_shelters <- read.csv(file = "Project data/homeless-shelter-locations.csv", head = TRUE, sep = ";") # homless shelters
# reading csv packages
parks <- read.csv(file = "Project data/parks.csv", head = TRUE, sep = ";") # parks
census_data <- read.csv(file = "Project data/data.csv", head = TRUE, sep = ",") # can census variables
street_trees <- read.csv(file = "Project data/street-trees.csv", head = TRUE, sep = ";") # street trees
homeless_shelters <- read.csv(file = "Project data/homeless-shelter-locations.csv", head = TRUE, sep = ";") # homeless shelters
View(census_data)
as.sf(census_data)
knitr::opts_chunk$set(echo = TRUE)
# loading cancensus package
library(cancensus)
# storing the API key in system environment to be easily used in API calls
options(cancensus.api_key = "CensusMapper_ff4c917e80df34b71900e0a048c999dd")
# returning census data and geography for the Vancouver CMA as an sf-class dataframe
census_data <- get_census(dataset='CA21', regions=list(CMA="59933"), vectors=c("v_CA21_1","v_CA21_386","v_CA21_906","v_CA21_4237","v_CA21_4917"), labels="detailed", geo_format="sf", level='CT')
View(census_data)
# reading csv packages
parks <- read.csv(file = "Project data/parks.csv", head = TRUE, sep = ";")
street_trees <- read.csv(file = "Project data/street-trees.csv", head = TRUE, sep = ";")
homeless_shelters <- read.csv(file = "Project data/homeless-shelter-locations.csv", head = TRUE, sep = ";")
View(homeless_shelters)
View(parks)
View(street_trees)
View(census_data)
ggplot(census_data) +
geom_sf(aes(fill = Population)),
ggplot(census_data) +
geom_sf(aes(fill = census_data$Population)),
ggplot(census_data) +
geom_sf(aes(fill = census_data$Population), colour = NA, size = 0.1)
ggplot(census_data) +
geom_sf(aes(fill = census_data$Population), colour = NA, size = 0.1)
# loading packages
library(cancensus)
library(ggplot2)
ggplot(census_data) +
geom_sf(aes(fill = census_data$Population), colour = NA, size = 0.1)
# returning census data and geography for the Vancouver CMA as an sf-class dataframe
census_data <- get_census(dataset='CA21', regions=list(CMA="59933"), vectors=c("v_CA21_1","v_CA21_386","v_CA21_906","v_CA21_4237","v_CA21_4917"), labels="detailed", geo_format=NA, level='CT')
View(census_data)
colnames(census_data) =  gsub(colnames(census_data),pattern="\\s|[[:punct:]]",replacement = ".")
View(census_data)
knitr::opts_chunk$set(echo = TRUE)
# loading packages
library(cancensus)
library(ggplot2)
# storing the API key in system environment to be easily used in API calls
options(cancensus.api_key = "CensusMapper_ff4c917e80df34b71900e0a048c999dd")
# assigning a persistent local cache
options(cancensus.cache_path = "/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
# returning census data and geography for the Vancouver CMA as an sf-class dataframe
census_data <- get_census(dataset='CA21', regions=list(CMA="59933"), vectors=c("v_CA21_1","v_CA21_386","v_CA21_906","v_CA21_4238","v_CA21_4239", "v_CA21_4240", "v_CA21_4875", "v_CA21_4914"), labels="detailed", geo_format=NA, level='CT')
View(census_data)
colnames(census_data) =  gsub(colnames(census_data),pattern="\\s|[[:punct:]]",replacement = ".")
census_data |>
ggplot(aes(x =v.CA21.4238..Owner , y=v.CA21.4239..Renter))+
geom_point()+
labs(y = "Average Income for Males",x = "Average Income for Females") +
ggtitle("Comparing Income In the Urban Core of Ottawa")
# testing out plotting!
census_data |>
ggplot(aes(x = v.CA21.4875..Total.visible.minority.population , y = census_data$v.CA21.906..Median.total.income.of.household.in.2020....))+
geom_point()+
labs(y = "Visible Minority Population",x = "Median Income") +
ggtitle("Comparing Income in Vancouver vs. Visible Minority")
# testing out plotting!
census_data |>
ggplot(aes(x = v.CA21.4875..Total.visible.minority.population , y = census_data$v.CA21.906..Median.total.income.of.household.in.2020....))+
geom_point()+
labs(x = "Visible Minority Population",y = "Median Income") +
ggtitle("Comparing Income in Vancouver vs. Visible Minority")
# returning census data and geography for the Vancouver CMA as an sf-class dataframe
census_data <- get_census(dataset='CA21', regions=list(CMA="59933"), vectors=c("v_CA21_1","v_CA21_386","v_CA21_906","v_CA21_4238","v_CA21_4239", "v_CA21_4240", "v_CA21_4875", "v_CA21_4914"), labels="detailed", geo_format="sf", level='CT')
View(census_data)
colnames(census_data) =  gsub(colnames(census_data),pattern="\\s|[[:punct:]]",replacement = ".")
View(census_data)
install.packages("tidycensus")
# loading packages
library(cancensus)
library(ggplot2)
library(tidyverse)
library(tidycensus)
library(tigris)
CT_centroids <- st_coordinates(st_centroid(census_data))
# loading packages
library(cancensus)
library(ggplot2)
library(tidyverse)
library(tidycensus)
library(tigris)
library(kableExtra)
library(plotly)
library(sf)
library(spatialreg)
library(spdep)
library(spgwr)
CT_centroids <- st_coordinates(st_centroid(census_data))
View(CT_centroids)
census_data.sp <- as(census_data, "Spatial")
census_data.nb <- poly2nb(pl = census_data.sp, queen = TRUE)
census_data.w <- nb2listw(census_data.nb)
census_data.nb <- poly2nb(pl = census_data.sp, queen = TRUE)
census_data.w <- nb2listw(census_data.nb)
View(census_data.nb)
summary(census_data.nb)
census_data.sf <- st_as_sf(census_data)
View(census_data.sf)
census_data.sf <- census_data.sf %>%
mutate(PropVisMin = (v.CA21.4875..Total.visible.minority.population / $v.CA21.1..Population..2021)*100)
census_data.sf <- census_data.sf %>%
mutate(PropVisMin = (v.CA21.4875..Total.visible.minority.population / v.CA21.1..Population..2021)*100)
View(census_data.sf)
ggplot(census_data.sf) +
geom_sf(aes(fill = cut_number(PropVisMin, 5)),
color = "black",
size = 0.1) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Proportion of Lung Cancer Cases in Pennsylvania")
ggplot(census_data.sf) +
geom_sf(aes(fill = cut_number(PropVisMin, 5)),
color = "black",
size = 0.1) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Proportion of Visible Minority Population in Vancouver CTs")
ggplot(census_data.sf) +
geom_sf(aes(fill = cut_number(PropVisMin, 5)),
color = "black",
size = 0.1) +
geom_point(CT_centroids) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Proportion of Visible Minority Population in Vancouver CTs")
minority_prop_map <- ggplot(census_data.sf) +
geom_sf(aes(fill = cut_number(PropVisMin, 5)),
color = "black",
size = 0.1) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Proportion of Visible Minority Population in Vancouver CTs")
minority_prop_map <- ggplot(census_data.sf) +
geom_sf(aes(fill = cut_number(PropVisMin, 5)),
color = "black",
size = 0.1) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Proportion of Visible Minority Population in Vancouver CTs")
minority_prop_map
View(CT_centroids)
minority_prop_map +
geom_point(aes(CT_centroids))
View(census_data[[25]][[1]])
knitr::opts_chunk$set(echo = TRUE)
# loading packages
library(cancensus)
library(ggplot2)
library(tidyverse)
library(tidycensus)
library(tigris)
library(kableExtra)
library(plotly)
library(sf)
library(spatialreg)
library(spdep)
library(spgwr)
# storing the API key in system environment to be easily used in API calls
options(cancensus.api_key = "CensusMapper_ff4c917e80df34b71900e0a048c999dd")
# assigning a persistent local cache
options(cancensus.cache_path = "/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
# returning census data and geography for the Vancouver CMA as an sf-class dataframe
census_data <- get_census(dataset='CA21', regions=list(CMA="59933"), vectors=c("v_CA21_1","v_CA21_386","v_CA21_906","v_CA21_4238","v_CA21_4239", "v_CA21_4240", "v_CA21_4875", "v_CA21_4914"), labels="detailed", geo_format="sf", level='CT')
View(census_data)
colnames(census_data) =  gsub(colnames(census_data),pattern="\\s|[[:punct:]]",replacement = ".")
# returning census data and geography for the Vancouver CMA as an sf-class dataframe
census_data <- get_census(dataset='CA21', regions=list(CMA="59933"), vectors=c("v_CA21_1","v_CA21_386","v_CA21_906","v_CA21_4238","v_CA21_4239", "v_CA21_4240", "v_CA21_4875", "v_CA21_4914"), labels="detailed", geo_format=NA, level='CT')
View(census_data)
colnames(census_data) =  gsub(colnames(census_data),pattern="\\s|[[:punct:]]",replacement = ".")
CT_centroids <- st_coordinates(st_centroid(census_data))
# returning census data and geography for the Vancouver CMA as an sf-class dataframe
census_data <- get_census(dataset='CA21', regions=list(CMA="59933"), vectors=c("v_CA21_1","v_CA21_386","v_CA21_906","v_CA21_4238","v_CA21_4239", "v_CA21_4240", "v_CA21_4875", "v_CA21_4914"), labels="detailed", geo_format="sf", level='CT')
colnames(census_data) =  gsub(colnames(census_data),pattern="\\s|[[:punct:]]",replacement = ".")
CT_centroids <- st_coordinates(st_centroid(census_data))
census_data <- census_data %>%
mutate(Proportion.visible.minority = (v.CA21.4875..Total.visible.minority.population / v.CA21.1..Population..2021))
minority_prop_map <- ggplot(census_data) +
geom_sf(aes(fill = cut_number(Proportion.visible.minority, 5)),
color = "black",
size = 0.1) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Proportion of Visible Minority Population in Vancouver CTs (2021)")
minority_prop_map
minority_prop_map <- ggplot(census_data) +
geom_sf(aes(fill = cut_number(Proportion.visible.minority, 5)),
color = "black",
size = 0.1) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Prop Visible Minority Vancouver CTs")
minority_prop_map
minority_prop_map +
geom_point(data = CT_centroids, aes(X = long, Y = lat), colour = "red")
minority_prop_map +
geom_sf(data = CT_centroids, col = "red", shape = 3)
minority_prop_map +
geom_sf(data = CT_centroids, col = "red", shape = 3)
