---
title: "The Relationship between Urban Green Space and Socioeconomic Factors in the City of Vancouver: A Case of Environmental Injustice"
author:
  - name: Daina De Angelis 
    student_number: 400240413
  - name: Jill Mezenberg 
    student_number: 400243427
  - name: Maeve Nowitsky
    student_number: 400264259
  - name: Tim Truong
    student_number: 400243427
  subject: "ENVSOCTY 4GA3"
  
output: html_document
date: "2023-03-20"
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r}
# Clearing data
rm(list = ls())
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.


```{r}
# loading packages
library(cancensus) #this package allows us to download census data from Stats Canada
library(ggplot2) 
library(tidyverse) #collection of packages for data visualization and manipulation (includes dplyr and ggplot2)
library(tidycensus)
library(tigris)
library(kableExtra)
library(plotly)
library(sf)
library(spatialreg)
library(spdep)
library(spgwr)
library(dplyr)
library(r5r)
library(rJava)
library(cartogram)
library(kableExtra) 
library(plotly) #packaged used to create interactive graphics 
library(sf) #package to work with geospatial data of simple feature class
library(spatialreg) #package used to perform spatial regression analysis
library(spdep) #package used to compute spatial dependence, weighting schemes, and spatial statistics
library(spgwr) # package for geographically weighted regression 
library(dplyr) #package to work with and manipulate data frames
library(r5r) #package to generate routing analysis and calculate the accessibility of parks in Vancouver
library(rJava) #an r to java interface used to support the r5r package 
```

#Introduction


#Background

#Study Area
This study took place at the Census Subdivision level to target the municipality of Vancouver, BC. There are 127 census tracts in Vancouver that were studied.  
```{r}
# storing the API key in system environment to be easily used in API calls
options(cancensus.api_key = "CensusMapper_ff4c917e80df34b71900e0a048c999dd")
```

```{r}
# assigning a persistent local cache
options(cancensus.cache_path = "/Users/dainadeangelis/Desktop/4GA3Project-/Project data")
```

```{r}
# returning census data and geography for the Vancouver CMA as an sf-class dataframe
census_data <- get_census(dataset='CA21', regions=list(CSD="5915022"), vectors=c("v_CA21_1","v_CA21_386","v_CA21_906", "v_CA21_4875", "v_CA21_4914", "v_CA21_1010"), labels="detailed", geo_format="sf", level='CT')
```

```{r}
# removing columns that are not needed for analysis
census_data <- census_data[,-c(4,5,9,10,13,15,16)]
```

```{r}
# renaming the columns in the dataset
names(census_data) [1] <- "Shape_area_km2"
names(census_data) [3] <- "Number_of_households"
names(census_data) [4] <- "Region_name"
names(census_data) [7] <- "Number_of_dwellings"
names(census_data) [10:15] <- c("Population_2021", "Average_age", "Median_total_income_of_household_2020", "Total_visible_minority_population", "Not_a_visible_minority", "Low_income_status_for_the_population_in_private_households_2020")
```

#Data
The data used for analysis includes census data for variables of income, 

for each census tract in the census subdivision of Vancouver. This data was obtained from Statistics Canada through use of the cancensus package in R. All census data used is from the 2021 census. Point data for each the location of each park, homeless shelter, and street tree in the census subdivision was downloaded in a .csv file format from the City of Vancouverâ€™s open data portal. To use the r5r package so that accessibility to parks by both walking and public transit could be determined, a road network dataset of Vancouver, and as well as a public transport feed of the city was needed. The road network dataset was obtained from BBBike, and was stored as a .pbf file. The public transport feed was obtained from Transitland and stored in a GTFS.zip file. 

#Methods
To determine the relationship between greenspace and other socioeconomic factors in Vancouver, Rstudio was used to analyze and visualize the variables being examined. 
Choropleth maps for variables 


Regression analysis was used to determine the relationship between the independent variable studied (number of parks accessible within a 30 minute travel time) and dependent variables ( 
Scatterplots were used to show a visual representation between independent and dependent variables studied to better understand the results of regression analysis. 

#Results

To begin our analysis, the centroids for each census tract in the Vancouver CSD were obtained and put into a dataframe with latitude, longitude, and census ID. This allowed us to have point data describing the middle of each CT. 
```{r}
# obtaining centroids for census tracts in the Vancouver CSD 
CT_centroids <- st_coordinates(st_centroid(census_data))
#converting centroids to data frame
centroids_df <- as.data.frame(CT_centroids)
class(centroids_df)
centroids_df<- cbind(centroids_df, census_data$GeoUID)

centroids_df <- centroids_df %>% 
                    rename("lon" = "X",
                           "lat" = "Y",
                           "id" = "census_data$GeoUID")

```

```{r}
# calculating population density for the census tracts in Vancouver
census_data <- census_data %>%
  mutate(Population_density =
           (Population_2021 / Shape_area_km2))
```

```{r}
# calculating the proportion of the minority population and adding to census_data
census_data <- census_data %>%
  mutate(Proportion_visible_minority= (Total_visible_minority_population / Population_2021))
```

```{r}
# calculating the proportion of the non visible minority population and adding to census_data
census_data <- census_data %>%
  mutate(Proportion_nonvisible_minority= (Not_a_visible_minority / Population_2021))
```

```{r}
# calculating the proportion of low income status in Vancouver census tracts
census_data <- census_data %>%
  mutate(Proportion_low_income = (Low_income_status_for_the_population_in_private_households_2020 / Population_2021))
```


The point data for park in the Vancouver CSD was obtained from a csv file from Vancouver's open data portal and transformed into a data frame with columns describing the X and Y coordinates of each park.
```{r}
# reading csv files
parks <- read.csv(file = "Project data/parks.csv", head = TRUE, sep = ";") 
```

```{r}
#extracting point data from park csv file
parks_coord <- data.frame(do.call("rbind", strsplit(as.character(parks$GoogleMapDest), ",", fixed = TRUE)))

# Rename multiple columns
parks_coord <- parks_coord %>% 
                    rename("X" = "X1",
                           "Y" = "X2")
```

The point data for parks was prepared for use of the r5r package by renaming coulumns for latitude, longitude, and park ID data and to the names required by r5r. Data for latitude and longitude was converted into a numeric format. Lastly, a column to indicate that each park point was one singular park was added to meet the requirement of the opportunites parameter in r5r.  
```{r}
#preparing park data for r5r
class(parks_coord)
parks_coord<- cbind(parks_coord, parks$ParkID)

# renaming columns
parks_coord <- parks_coord %>% 
                   rename("lat" = "X",
                          "lon" = "Y",
                          "id" = "parks$ParkID")

# changing columns to numeric
parks_coord$lon <- as.numeric(parks_coord$lon)
parks_coord$lat <- as.numeric(parks_coord$lat)
```
```{r}
parks_coord <- parks_coord %>%
  add_column(Parks_count = 1)
```

Next, the r5r package was used in order to build a transport network for Vancouver, so that the distances and routing between the centroids of census tracts and park locations can be calculated. 
```{r}
#allocating RAM memory to Java to use the r5r package
options(java.parameters = "-Xmx2G")
```

The transport network was built with using a road network dataset of Vancouver, and as well as a public transport feed of the city. The road network dataset was obtained from BBBike, and was stored as a .pbf file. The public transport feed was obtained from Transitland and stored in a GTFS.zip file.  
```{r}
#building transport network for r5r
path <- file.path("Project data/r5rpath")

#building transport network for r5r
list.files(path)
r5r_core <- setup_r5(data_path = path)
```
```{r}
#load origin points as the centroids of census tracts
points <- centroids_df
class(points)
#points of interest: parks
poi <- parks_coord
#departure times
departure_datetime <- as.POSIXct("16-02-2023 14:00:00",
                                 format = "%d-%m-%Y %H:%M:%S")

```

The accessibility function in r5r was used to compute how many parks were accessible within 30 minutes of each census tracts centroid by walking or public transit. 
```{r}
#using accessibility from r5r
access <- accessibility(r5r_core = r5r_core,
                        origins = points,
                        destinations = poi,
                        opportunities_colnames = c("Parks_count"),
                        mode = c("WALK", "TRANSIT"),
                        departure_datetime = departure_datetime,
                        decay_function = "step",
                        cutoffs = 30)
```

```{r}
# creating a choropleth map for the 2021 population
ggplot(census_data) +
  geom_sf(aes(fill = cut_number(Population_2021, 5)),
          colour = "black",
          size = 0.1) +
  scale_fill_brewer(palette = "YlOrRd") +
  coord_sf() +
  labs(fill = "Population")
```

```{r}
# creating a choropleth map for the population density
ggplot(census_data) +
  geom_sf(aes(fill = cut_number(Population_density, 5)),
          colour = "black",
          size = 0.1) +
  scale_fill_brewer(palette = "YlOrRd") +
  coord_sf() +
  labs(fill = "Population Density")
```

```{r}
# creating a choropleth map for the proportion of the visisble minority population
ggplot(census_data) +
geom_sf(aes(fill = cut_number(Proportion_visible_minority, 5)),
        color = "black",
        size = 0.1) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Prop Visible Minority")
```
```{r}
# creating a choropleth map for the proportion of the non-visisble minority population
ggplot(census_data) +
geom_sf(aes(fill = cut_number(Proportion_nonvisible_minority, 5)),
        color = "black",
        size = 0.1) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Prop Non-Visible Minority")
```

```{r}
# displaying the proportion of low-income groups on a choropleth map
ggplot(census_data) +
geom_sf(aes(fill = cut_number(Proportion_low_income, 5)),
        color = "black",
        size = 0.1) +
scale_fill_brewer(palette = "YlOrRd") +
labs(fill = "Prop Low Income")
```

